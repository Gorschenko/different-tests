global:
  scrape_interval: 15s
  # Интервал проверки правил уведомлений
  evaluation_interval: 15s
  # Проставляем label для внешних источников.
  # Подойдет для федерации - для сбора метрик с нескольких Prometheus,
  # которые будут отправляться на центральный сервер
  external_labels:
    datacenter: dc1

rule_files:
  - "rules/alerts.yml"

alerting:
  alertmanagers:
    - static_configs:
        - targets: ['alertmanager:9093']

scrape_configs:
  - job_name: "prometheus"
    static_configs:
      - targets: ["localhost:9090"]
        # Можно указывать label, по которым потом фильтроваться
        labels:
          env: "test_label"
  # - job_name: "node_exporter"
  #   static_configs:
  #     - targets: ["10.0.2.102:9100"]
  - job_name: "redis_exporter"
    static_configs:
      - targets: ["redis_exporter:9121"]
  - job_name: "pushgateway"
    # Запрещает Prometheus подставлять свои теги.
    # Мы их указываем сами при отправке в Pushgatwey
    honor_labels: true
    static_configs:
      - targets: ["pushgateway:9091"]
    # Будет подтягивать цели с периодичностью из файлов
    # Аналогично можно делать через docker, dns, облака и т.д.
  - job_name: "file"
    file_sd_configs:
    - files:
      - "targets/*.json"
      refresh_interval: "1m"
  # Настройка сбора метрик с другого Prometheus
  - job_name: federation
    honor_labels: true
    # Prometheus отдает метрики по /federate
    metrics_path: /federate
    # Вытаскиваем метрики, которые начинаются с job
    # в соответствии с federation.yml
    params:
      match[]:
        - "{__name__=~'^job:.*'}"
    static_configs:
      - targets:
        - any_host_of_prometheus:9090