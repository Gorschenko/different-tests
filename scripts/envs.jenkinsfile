def myTestVar
pipeline {
    agent {
        label 'linux'
    }
    environment {
        MY_GLOBAL_VAR = 'myGlobalVar'
        MY_RANDOM_VAR = sh(returnStdout: true, script: 'openssl rand -base64 19').trim()
        MY_SECRET_TEXT = credentials('Gorschenko-github')
    }
    stages {
        stage('stage 1') {
            steps {
                sh 'echo $MY_GLOBAL_VAR'
                sh 'env | sort'
            }
        }
        stage('override variables 1') {
            steps {
                script {
                    env.MY_GLOBAL_VAR = 'It does not work!'
                    println('_____')
                    println("$MY_GLOBAL_VAR")
                }
                echo "MY_GLOBAL_VAR = ${env.MY_GLOBAL_VAR}"

                withEnv(["MY_GLOBAL_VAR=myNewGlobalVar"]) {
                    echo "MY_GLOBAL_VAR = ${env.MY_GLOBAL_VAR}"
                }

                withEnv(["BUILD_NUMBER=1"]) {
                    echo "BUILD_NUMBER = ${env.BUILD_NUMBER}"
                }
            }
        }
        stage('override vaiables 2') {
            steps {
                script {
                    myTestVar = 'myTestVar'
                    println("$myTestVar")
                }
            }
        }
        stage ('print myTestVar') {
            steps {
                script {
                    println("$myTestVar")
                }
            }
        }
        stage('stage 2') {
            environment {
                MY_STAGE_VAR = 'myStageVar'
            }
            steps {
                sh 'echo $MY_STAGE_VAR'
            }
        }
        stage('stage 3') {
            steps {
                sh 'echo $MY_STAGE_VAR'
            }
        }
        stage('stage 4') {
            steps {
                sh 'echo $MY_RANDOM_VAR'
                sh 'echo $MY_SECRET_TEXT'
            }
        }
    }
}